<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="registrar_compra.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CX/9ABL//oFL//0yE//+gD////////////8=
</value>
  </data>
</root>